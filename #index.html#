<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Heart Disease Prediction with Logistic Regression</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --secondary-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            --tertiary-gradient: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            --success-gradient: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
            --bg-primary: #0a0e27;
            --bg-secondary: #151933;
            --text-primary: #ffffff;
            --text-secondary: #e0e7ff;
            --accent-primary: #818cf8;
            --accent-secondary: #a78bfa;
            --card-bg: rgba(139, 92, 246, 0.1);
            --border-color: rgba(139, 92, 246, 0.3);
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background: var(--bg-primary);
            color: var(--text-primary);
            overflow: hidden;
            cursor: default;
            -webkit-tap-highlight-color: transparent;
            user-select: none;
            width: 100vw;
            height: 100vh;
            position: relative;
        }

        /* Static gradient background */
        .bg-static {
            position: fixed;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            z-index: 0;
            opacity: 0.3;
            background: radial-gradient(circle at 20% 80%, #667eea 0%, transparent 50%),
                        radial-gradient(circle at 80% 20%, #764ba2 0%, transparent 50%),
                        radial-gradient(circle at 40% 40%, #f093fb 0%, transparent 50%);
        }

        .presentation-container {
            width: 100vw;
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            padding: 10px 20px 80px 20px;
            z-index: 1;
            overflow-y: auto;
        }

        .slide {
            display: none;
            text-align: center;
            width: 100%;
            max-width: 1400px;
            max-height: 95vh;
            overflow-y: auto;
            animation: slideIn 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
            padding: 20px 0;
        }

        /* Hide scrollbar but keep functionality */
        .slide::-webkit-scrollbar {
            width: 0px;
            background: transparent;
        }

        .slide {
            -ms-overflow-style: none;
            scrollbar-width: none;
        }

        .slide.active {
            display: block;
        }

        @keyframes slideIn {
            0% {
                opacity: 0;
                transform: translateX(50px) scale(0.95);
            }
            100% {
                opacity: 1;
                transform: translateX(0) scale(1);
            }
        }

        h1 {
            font-size: 3.5rem;
            margin-bottom: 20px;
            background: var(--primary-gradient);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            font-weight: 900;
            letter-spacing: -2px;
            line-height: 1.1;
            text-shadow: 0 0 80px rgba(139, 92, 246, 0.5);
        }

        h2 {
            font-size: 2.5rem;
            margin-bottom: 20px;
            background: linear-gradient(to right, #818cf8, #c084fc);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            font-weight: 800;
            letter-spacing: -1px;
        }

        h3 {
            font-size: 1.8rem;
            margin-bottom: 15px;
            color: var(--accent-secondary);
            font-weight: 700;
        }

        p {
            font-size: 1.3rem;
            line-height: 1.8;
            margin-bottom: 15px;
            color: var(--text-secondary);
            font-weight: 300;
        }

        .hero-icon {
            font-size: 4rem;
            margin-bottom: 20px;
            display: inline-block;
            animation: float 3s ease-in-out infinite;
            filter: drop-shadow(0 10px 20px rgba(139, 92, 246, 0.4));
        }

        @keyframes float {
            0%, 100% { transform: translateY(0) rotate(0deg); }
            50% { transform: translateY(-20px) rotate(5deg); }
        }

        .content-card {
            background: linear-gradient(135deg, var(--card-bg), rgba(99, 102, 241, 0.05));
            backdrop-filter: blur(20px);
            padding: 40px;
            border-radius: 24px;
            margin: 20px auto;
            border: 1px solid var(--border-color);
            box-shadow: 0 20px 60px rgba(139, 92, 246, 0.15),
                        inset 0 1px 0 rgba(255, 255, 255, 0.1);
            max-width: 1100px;
            position: relative;
            overflow: hidden;
        }

        .principle-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
            gap: 25px;
            margin: 30px 0;
            position: relative;
            z-index: 1;
        }

        .principle-card {
            background: linear-gradient(135deg, rgba(99, 102, 241, 0.15), rgba(139, 92, 246, 0.05));
            padding: 30px;
            border-radius: 20px;
            border: 1px solid rgba(139, 92, 246, 0.2);
            transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            cursor: pointer;
            position: relative;
            overflow: hidden;
        }

        .principle-card:hover {
            transform: translateY(-8px) scale(1.02);
            box-shadow: 0 20px 40px rgba(139, 92, 246, 0.3);
            border-color: var(--accent-primary);
        }

        .showcase-icon {
            font-size: 2.5rem;
            margin-bottom: 15px;
            display: inline-block;
        }

        .code-example {
            background: #1a1f36;
            padding: 20px;
            border-radius: 16px;
            margin: 15px 0;
            text-align: left;
            font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Fira Code', monospace;
            font-size: 0.95rem;
            line-height: 1.6;
            border: 1px solid rgba(139, 92, 246, 0.2);
            position: relative;
            overflow-x: auto;
        }

        .code-display {
            background: #1a1f36;
            padding: 30px;
            border-radius: 16px;
            margin: 20px auto;
            text-align: left;
            font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Fira Code', monospace;
            font-size: 0.9rem;
            line-height: 1.8;
            border: 1px solid rgba(139, 92, 246, 0.2);
            max-height: 400px;
            overflow-y: auto;
            max-width: 1000px;
            position: relative;
            user-select: text;
        }

        /* Hide scrollbar for code display */
        .code-display::-webkit-scrollbar {
            width: 0px;
            background: transparent;
        }

        .code-display {
            -ms-overflow-style: none;
            scrollbar-width: none;
        }

        .code-display pre {
            margin: 0;
            color: #e0e7ff;
            white-space: pre-wrap;
        }

        .code-display .comment {
            color: #6272a4;
        }

        .code-display .function {
            color: #50fa7b;
        }

        .code-display .string {
            color: #f1fa8c;
        }

        .code-display .number {
            color: #bd93f9;
        }

        .code-header {
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 20px;
            gap: 15px;
        }

        .code-header h3 {
            margin: 0;
            font-size: 1.6rem;
        }

        .code-header .hero-icon {
            font-size: 2rem;
            margin: 0;
        }

        .workflow-step {
            background: rgba(139, 92, 246, 0.1);
            padding: 25px;
            border-radius: 16px;
            border: 1px solid rgba(139, 92, 246, 0.3);
            text-align: left;
            margin: 15px 0;
        }

        .workflow-number {
            display: inline-block;
            width: 40px;
            height: 40px;
            background: var(--primary-gradient);
            color: white;
            border-radius: 50%;
            line-height: 40px;
            font-weight: bold;
            margin-bottom: 15px;
            text-align: center;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.05);
            padding: 25px;
            border-radius: 16px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            transition: all 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(139, 92, 246, 0.2);
        }

        .stat-number {
            font-size: 3rem;
            font-weight: 900;
            background: var(--primary-gradient);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .key-takeaway {
            background: linear-gradient(135deg, rgba(16, 185, 129, 0.1), rgba(5, 150, 105, 0.05));
            padding: 25px;
            border-radius: 16px;
            margin: 20px 0;
            border: 2px solid rgba(16, 185, 129, 0.3);
            text-align: left;
        }

        .challenge-solution {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin: 30px 0;
        }

        .challenge-card {
            background: linear-gradient(135deg, rgba(231, 76, 60, 0.1), transparent);
            padding: 30px;
            border-radius: 20px;
            border: 2px solid rgba(231, 76, 60, 0.3);
        }

        .solution-card {
            background: linear-gradient(135deg, rgba(46, 204, 113, 0.1), transparent);
            padding: 30px;
            border-radius: 20px;
            border: 2px solid rgba(46, 204, 113, 0.3);
        }

        .confusion-matrix {
            display: inline-block;
            background: rgba(255, 255, 255, 0.05);
            padding: 30px;
            border-radius: 20px;
            margin: 20px auto;
        }

        .matrix-row {
            display: flex;
            justify-content: center;
            margin: 5px 0;
        }

        .matrix-cell {
            width: 100px;
            height: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 2px;
            border-radius: 8px;
            font-weight: bold;
            font-size: 1.2rem;
        }

        .matrix-cell.header {
            background: rgba(139, 92, 246, 0.2);
            font-size: 1rem;
        }

        .matrix-cell.correct {
            background: rgba(67, 233, 123, 0.3);
            font-size: 1.8rem;
        }

        .matrix-cell.wrong {
            background: rgba(243, 93, 108, 0.3);
            font-size: 1.4rem;
        }

        /* Proper visualization styles */
        .histogram-container {
            background: #f8f9fa;
            padding: 30px;
            border-radius: 16px;
            margin: 20px auto;
            max-width: 800px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        .histogram {
            position: relative;
            height: 300px;
            display: flex;
            align-items: flex-end;
            justify-content: space-around;
            border-left: 2px solid #333;
            border-bottom: 2px solid #333;
            padding: 20px;
        }

        .hist-bar {
            background: #667eea;
            border-radius: 4px 4px 0 0;
            position: relative;
            transition: all 0.3s ease;
            min-width: 80px;
            margin: 0 10px;
        }

        .hist-bar:hover {
            background: #764ba2;
            transform: translateY(-5px);
        }

        .hist-bar-label {
            position: absolute;
            bottom: -25px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 0.9rem;
            color: #333;
        }

        .hist-bar-value {
            position: absolute;
            top: -25px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 0.9rem;
            font-weight: bold;
            color: #333;
        }

        .axis-label {
            position: absolute;
            color: #333;
            font-weight: 600;
        }

        .x-axis-label {
            bottom: -50px;
            left: 50%;
            transform: translateX(-50%);
        }

        .y-axis-label {
            left: -80px;
            top: 50%;
            transform: rotate(-90deg);
        }

        .countplot-container {
            background: #f8f9fa;
            padding: 30px;
            border-radius: 16px;
            margin: 20px auto;
            max-width: 900px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        .countplot {
            position: relative;
            height: 350px;
            display: flex;
            align-items: flex-end;
            justify-content: space-around;
            border-left: 2px solid #333;
            border-bottom: 2px solid #333;
            padding: 20px;
        }

        .count-group {
            display: flex;
            gap: 10px;
            align-items: flex-end;
        }

        .count-bar {
            width: 40px;
            border-radius: 4px 4px 0 0;
            position: relative;
            transition: all 0.3s ease;
        }

        .count-bar.no-disease {
            background: #43e97b;
        }

        .count-bar.disease {
            background: #f5576c;
        }

        .count-bar:hover {
            transform: translateY(-5px);
            filter: brightness(1.1);
        }

        .count-label {
            position: absolute;
            bottom: -30px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 0.9rem;
            color: #333;
            white-space: nowrap;
        }

        .legend {
            display: flex;
            justify-content: center;
            gap: 30px;
            margin-top: 20px;
        }

        .legend-item {
            display: flex;
            align-items: center;
            gap: 8px;
            color: #333;
        }

        .legend-box {
            width: 20px;
            height: 20px;
            border-radius: 4px;
        }

        .heatmap-container {
            background: #f8f9fa;
            padding: 30px;
            border-radius: 16px;
            margin: 20px auto;
            max-width: 700px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        .heatmap {
            display: grid;
            grid-template-columns: 80px repeat(2, 150px);
            grid-template-rows: 80px repeat(2, 100px);
            gap: 2px;
            background: #333;
            padding: 2px;
        }

        .heatmap-cell {
            background: #fff;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 1.2rem;
            position: relative;
        }

        .heatmap-cell.header {
            background: #e0e0e0;
            font-size: 0.9rem;
            color: #333;
        }

        .heatmap-cell.value {
            color: #fff;
        }

        .heatmap-cell.high {
            background: #d32f2f;
        }

        .heatmap-cell.medium {
            background: #f57c00;
        }

        .heatmap-cell.low {
            background: #ffb74d;
        }

        .navigation {
            position: fixed;
            bottom: 30px;
            left: 50%;
            transform: translateX(-50%);
            display: flex;
            gap: 20px;
            align-items: center;
            background: rgba(21, 25, 51, 0.95);
            padding: 12px 25px;
            border-radius: 40px;
            border: 1px solid rgba(139, 92, 246, 0.3);
            backdrop-filter: blur(10px);
            z-index: 1000;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        }

        .nav-button {
            background: none;
            border: none;
            color: var(--accent-primary);
            font-size: 1.5rem;
            cursor: pointer;
            transition: all 0.3s ease;
            padding: 10px;
            border-radius: 50%;
        }

        .nav-button:hover {
            background: rgba(139, 92, 246, 0.2);
            transform: scale(1.1);
        }

        .slide-indicator {
            font-size: 1rem;
            color: var(--text-secondary);
            font-weight: 600;
            min-width: 100px;
            text-align: center;
        }

        .progress-bar {
            position: fixed;
            top: 0;
            left: 0;
            height: 4px;
            background: var(--primary-gradient);
            transition: width 0.5s cubic-bezier(0.65, 0, 0.35, 1);
            z-index: 1001;
            box-shadow: 0 0 10px rgba(139, 92, 246, 0.5);
        }

        .gradient-text {
            background: linear-gradient(90deg, #667eea 0%, #764ba2 25%, #f093fb 50%, #f5576c 75%, #4facfe 100%);
            background-size: 200% auto;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            animation: gradientMove 3s linear infinite;
        }

        @keyframes gradientMove {
            to { background-position: 200% center; }
        }

        /* Mobile responsive */
        @media (max-width: 768px) {
            h1 { font-size: 2.2rem; }
            h2 { font-size: 1.8rem; }
            h3 { font-size: 1.4rem; }
            p { font-size: 1.1rem; }
            
            .hero-icon { font-size: 3rem; }
            
            .principle-grid {
                grid-template-columns: 1fr;
            }
            
            .challenge-solution {
                grid-template-columns: 1fr;
            }
            
            .content-card {
                padding: 20px;
                margin: 10px auto;
            }
            
            .code-display {
                font-size: 0.8rem;
                padding: 20px;
            }
        }
    </style>
</head>
<body>
    <div class="bg-static"></div>
    <div class="progress-bar" id="progressBar"></div>
    
    <div class="presentation-container">
        
        <!-- Slide 1: Introduction -->
        <div class="slide active">
            <div class="hero-icon">❤️</div>
            <h1>Hearty AI</h1>
            <div class="content-card">
                <h3 class="gradient-text">Transform Medical Data into Life-Saving Predictions</h3>
                <p>From patient records to instant risk assessment using machine learning</p>
                <div style="margin-top: 30px; display: flex; justify-content: center; gap: 40px; align-items: center;">
                    <span style="font-size: 2rem;">💊</span>
                    <span style="font-size: 2rem;">🤖</span>
                    <span style="font-size: 2rem;">💚</span>
                </div>
            </div>
        </div>

        <!-- Slide 2: Problem Statement -->
        <div class="slide">
            <h2>Problem Statement</h2>
            <div class="content-card">
                <h3>Why We Need This Project</h3>
                <div style="text-align: left; margin-top: 30px;">
                    <p style="font-size: 1.4rem; margin-bottom: 25px;">
                        <strong>Heart disease kills more people than any other disease</strong>
                    </p>
                    
                    <div class="principle-grid">
                        <div class="principle-card">
                            <div class="showcase-icon">🌍</div>
                            <h4>Big Problem</h4>
                            <p>17.9 million people die every year from heart problems</p>
                        </div>
                        <div class="principle-card">
                            <div class="showcase-icon">⏰</div>
                            <h4>Finding It Late</h4>
                            <p>Most people find out too late when they already have serious problems</p>
                        </div>
                        <div class="principle-card">
                            <div class="showcase-icon">💰</div>
                            <h4>Very Expensive</h4>
                            <p>Heart tests cost a lot of money and take many days</p>
                        </div>
                    </div>
                    
                    <div class="key-takeaway" style="margin-top: 30px;">
                        <h4 style="color: #10b981; margin-bottom: 15px;">Our Solution</h4>
                        <p style="font-size: 1.3rem;">We made a computer program that can predict heart disease using simple medical information</p>
                        <p style="font-size: 1.2rem; margin-top: 10px;">✅ Fast (few seconds)</p>
                        <p style="font-size: 1.2rem;">✅ Cheap (just need basic tests)</p>
                        <p style="font-size: 1.2rem;">✅ Easy to use</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 3: Dataset Overview -->
        <div class="slide">
            <h2>Dataset Overview</h2>
            <div class="content-card">
                <h3>What Data We Used</h3>
                <p style="margin-bottom: 30px;">We got medical records from <strong>918 patients</strong></p>
                
                <div class="principle-grid">
                    <div class="principle-card">
                        <div class="showcase-icon">🧑‍🤝‍🧑</div>
                        <h4>Basic Information</h4>
                        <p><strong>Age:</strong> How old they are</p>
                        <p><strong>Sex:</strong> Male or Female</p>
                    </div>
                    <div class="principle-card">
                        <div class="showcase-icon">💓</div>
                        <h4>Heart Information</h4>
                        <p><strong>Blood Pressure:</strong> How hard blood pushes</p>
                        <p><strong>Heart Rate:</strong> How fast heart beats</p>
                        <p><strong>Chest Pain:</strong> What type of pain</p>
                    </div>
                    <div class="principle-card">
                        <div class="showcase-icon">🔬</div>
                        <h4>Test Results</h4>
                        <p><strong>Cholesterol:</strong> Fat in blood</p>
                        <p><strong>Blood Sugar:</strong> Sugar level</p>
                        <p><strong>ECG:</strong> Heart electricity test</p>
                    </div>
                </div>
                
                <div style="margin-top: 40px;">
                    <h4>Our Target: Do They Have Heart Disease?</h4>
                    <div style="display: flex; justify-content: center; gap: 40px; margin-top: 20px;">
                        <div class="stat-card">
                            <div class="stat-number" style="color: #43e97b;">410</div>
                            <p>Healthy People (45%)</p>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number" style="color: #f5576c;">508</div>
                            <p>Sick People (55%)</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 4: Model Used -->
        <div class="slide">
            <h2>Model Used</h2>
            <div class="content-card">
                <h3>Logistic Regression</h3>
                <p style="font-size: 1.4rem; margin-bottom: 30px;">A simple but powerful way to predict Yes or No</p>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 40px; margin: 30px 0;">
                    <div style="text-align: left;">
                        <h4 style="color: #818cf8; margin-bottom: 20px;">How It Works</h4>
                        <div class="workflow-step">
                            <div class="workflow-number">1</div>
                            <p>Takes patient information (age, blood pressure, etc.)</p>
                        </div>
                        <div class="workflow-step">
                            <div class="workflow-number">2</div>
                            <p>Calculates a number between 0 and 1</p>
                        </div>
                        <div class="workflow-step">
                            <div class="workflow-number">3</div>
                            <p>If number > 0.5 → Has disease<br>If number < 0.5 → No disease</p>
                        </div>
                    </div>
                    
                    <div style="text-align: left;">
                        <h4 style="color: #a78bfa; margin-bottom: 20px;">Why We Chose It</h4>
                        <ul style="list-style: none; padding: 0;">
                            <li style="padding: 12px 0; font-size: 1.2rem;">✅ Perfect for Yes/No questions</li>
                            <li style="padding: 12px 0; font-size: 1.2rem;">✅ Easy to understand results</li>
                            <li style="padding: 12px 0; font-size: 1.2rem;">✅ Works well with medical data</li>
                            <li style="padding: 12px 0; font-size: 1.2rem;">✅ Doctors can trust it</li>
                            <li style="padding: 12px 0; font-size: 1.2rem;">✅ Fast to train and use</li>
                        </ul>
                    </div>
                </div>
                
                <div class="code-example">
                    <p style="color: #818cf8; margin-bottom: 10px;">Simple Example:</p>
                    <p style="color: #e0e7ff;">Patient: 55 years old, high blood pressure, chest pain</p>
                    <p style="color: #e0e7ff;">Model calculates: 0.78 (probability)</p>
                    <p style="color: #f5576c;">Result: High risk (78%) → This patient likely has heart disease!</p>
                </div>
            </div>
        </div>

        <!-- Slide 5: Accuracy / Evaluation Results -->
        <div class="slide">
            <h2>Accuracy & Results</h2>
            <div class="content-card">
                <h3>How Good Is Our Model?</h3>
                
                <div style="margin: 40px 0;">
                    <div class="stat-number" style="font-size: 5rem; color: #43e97b;">87.3%</div>
                    <p style="font-size: 1.5rem;">Overall Accuracy</p>
                </div>
                
                <div style="margin: 40px 0;">
                    <h4>What This Means</h4>
                    <p style="font-size: 1.3rem; margin-bottom: 30px;">When we test on new patients:</p>
                    
                    <div class="confusion-matrix">
                        <div class="matrix-row">
                            <div class="matrix-cell header">Real →</div>
                            <div class="matrix-cell header">Healthy</div>
                            <div class="matrix-cell header">Sick</div>
                        </div>
                        <div class="matrix-row">
                            <div class="matrix-cell header">We Said<br>Healthy</div>
                            <div class="matrix-cell correct">109✓</div>
                            <div class="matrix-cell wrong">21✗</div>
                        </div>
                        <div class="matrix-row">
                            <div class="matrix-cell header">We Said<br>Sick</div>
                            <div class="matrix-cell wrong">14✗</div>
                            <div class="matrix-cell correct">132✓</div>
                        </div>
                    </div>
                </div>
                
                <div class="principle-grid" style="margin-top: 40px;">
                    <div class="principle-card">
                        <h4>✅ Good News</h4>
                        <p>For every 100 sick people, we find 86 of them correctly</p>
                    </div>
                    <div class="principle-card">
                        <h4>⚠️ Be Careful</h4>
                        <p>For every 100 predictions, about 13 are wrong</p>
                    </div>
                    <div class="principle-card">
                        <h4>🎯 Very Useful</h4>
                        <p>Much better than guessing (50%) - saves many lives!</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 6: Challenges & Solutions & Future Work -->
        <div class="slide">
            <h2>Challenges, Solutions & Future</h2>
            <div class="content-card">
                <div class="challenge-solution">
                    <div class="challenge-card">
                        <h3 style="color: #f5576c;">🚧 Problems We Faced</h3>
                        <div style="margin-top: 20px; text-align: left;">
                            <h4>1. Missing Data</h4>
                            <p>Some patients had no cholesterol values</p>
                            
                            <h4 style="margin-top: 20px;">2. Different Data Types</h4>
                            <p>Mix of numbers and words (like "Male/Female")</p>
                            
                            <h4 style="margin-top: 20px;">3. Unbalanced Data</h4>
                            <p>More sick people than healthy in our data</p>
                        </div>
                    </div>
                    
                    <div class="solution-card">
                        <h3 style="color: #43e97b;">✅ How We Fixed It</h3>
                        <div style="margin-top: 20px; text-align: left;">
                            <h4>1. Filled Missing Values</h4>
                            <p>Used average values from similar patients</p>
                            
                            <h4 style="margin-top: 20px;">2. Converted Words to Numbers</h4>
                            <p>Male = 1, Female = 0 (computer needs numbers)</p>
                            
                            <h4 style="margin-top: 20px;">3. Tried Different Models</h4>
                            <p>Also tested Decision Tree - got 80% accuracy</p>
                        </div>
                    </div>
                </div>
                
                <div class="key-takeaway" style="margin-top: 30px;">
                    <h3 style="color: #818cf8;">🚀 Future Ideas</h3>
                    <div class="principle-grid" style="margin-top: 20px;">
                        <div class="workflow-step">
                            <h4>📱 Mobile App</h4>
                            <p>People can check their risk at home</p>
                        </div>
                        <div class="workflow-step">
                            <h4>🧠 Better Models</h4>
                            <p>Try Neural Networks for 90%+ accuracy</p>
                        </div>
                        <div class="workflow-step">
                            <h4>🏥 Hospital Use</h4>
                            <p>Connect to real hospital systems</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Code Demo Slides Start Here -->
        <!-- Steps 1-4: Import, Load, Preview, Basic Info -->
        <div class="slide">
            <div class="code-header">
                <span class="hero-icon">💻</span>
                <h3>Our Code Implementation</h3>
            </div>
            
            <div class="content-card">
                <h4>Steps 1-4: Setup and Data Loading</h4>
                
                <div class="code-display">
                    <pre><span class="comment"># Step 1: Import Libraries</span>
<span class="function">import</span> pandas as pd
<span class="function">import</span> numpy as np
<span class="function">import</span> matplotlib.pyplot as plt
<span class="function">import</span> seaborn as sns

<span class="comment"># Step 2: Load the Dataset</span>
<span class="function">import</span> kagglehub
<span class="function">from</span> kagglehub <span class="function">import</span> KaggleDatasetAdapter

file_path = <span class="string">"heart.csv"</span>
data = kagglehub.load_dataset(
    KaggleDatasetAdapter.PANDAS,
    <span class="string">"fedesoriano/heart-failure-prediction"</span>,
    file_path
)

<span class="comment"># Step 3: Preview the Data</span>
data.head()

<span class="comment"># Step 4: Basic Information</span>
data.info()
data.describe()</pre>
                </div>
            </div>
        </div>

        <!-- Step 5: Check Missing Values -->
        <div class="slide">
            <div class="code-header">
                <span class="hero-icon">🔍</span>
                <h3>Step 5: Check for Missing Values</h3>
            </div>
            
            <div class="content-card">
                <div class="code-display">
                    <pre><span class="comment"># Step 5: Check for Missing Values</span>
data.isnull().sum()</pre>
                </div>
                
                <div style="background: rgba(46, 204, 113, 0.1); padding: 20px; border-radius: 16px; margin-top: 20px;">
                    <p><strong>Result: No missing values found!</strong></p>
                    <p>All 918 patients have complete data</p>
                </div>
            </div>
        </div>

        <!-- Step 6: EDA - HeartDisease Distribution -->
        <div class="slide">
            <div class="code-header">
                <span class="hero-icon">📊</span>
                <h3>Step 6: Data Exploration - Heart Disease</h3>
            </div>
            
            <div class="content-card">
                <div class="code-display">
                    <pre><span class="comment"># What does the distribution of HeartDisease (0 vs 1) look like?</span>
plt.hist(data[<span class="string">'HeartDisease'</span>])
plt.show()</pre>
                </div>
                
                <div class="histogram-container">
                    <h5 style="text-align: center; color: #333; margin-bottom: 20px;">Heart Disease Distribution</h5>
                    <div class="histogram">
                        <div class="hist-bar" style="height: 180px;">
                            <div class="hist-bar-value">410</div>
                            <div class="hist-bar-label">0 (No)</div>
                        </div>
                        <div class="hist-bar" style="height: 220px;">
                            <div class="hist-bar-value">508</div>
                            <div class="hist-bar-label">1 (Yes)</div>
                        </div>
                        <div class="x-axis-label">Heart Disease</div>
                        <div class="y-axis-label">Count</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Step 6: Age & Cholesterol Histograms -->
        <div class="slide">
            <div class="code-header">
                <span class="hero-icon">📊</span>
                <h3>Step 6: Age and Cholesterol Distributions</h3>
            </div>
            
            <div class="content-card">
                <div class="code-display">
                    <pre><span class="comment"># How does Age vary between people with and without Heart Disease?</span>
plt.hist(data[<span class="string">'Age'</span>])
plt.show()

<span class="comment"># What is the distribution of cholesterol values in the dataset?</span>
plt.hist(data[<span class="string">'Cholesterol'</span>])
plt.show()</pre>
                </div>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px;">
                    <div class="histogram-container" style="padding: 20px;">
                        <h5 style="text-align: center; color: #333; margin-bottom: 10px;">Age Distribution</h5>
                        <div class="histogram" style="height: 200px;">
                            <div style="position: absolute; bottom: 20px; left: 20px; right: 20px; height: 150px; background: linear-gradient(to top, #667eea, #764ba2); border-radius: 8px; opacity: 0.8;">
                                <div style="text-align: center; color: white; padding-top: 60px;">
                                    <p>Range: 28-77 years</p>
                                    <p>Average: 53.5 years</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="histogram-container" style="padding: 20px;">
                        <h5 style="text-align: center; color: #333; margin-bottom: 10px;">Cholesterol Distribution</h5>
                        <div class="histogram" style="height: 200px;">
                            <div style="position: absolute; bottom: 20px; left: 20px; right: 20px; height: 150px; background: linear-gradient(to top, #667eea, #764ba2); border-radius: 8px; opacity: 0.8;">
                                <div style="text-align: center; color: white; padding-top: 60px;">
                                    <p>Range: 0-603 mg/dl</p>
                                    <p>Average: 198.8 mg/dl</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Step 6: Chest Pain Type Analysis -->
        <div class="slide">
            <div class="code-header">
                <span class="hero-icon">📊</span>
                <h3>Step 6: Chest Pain Type vs Heart Disease</h3>
            </div>
            
            <div class="content-card">
                <div class="code-display">
                    <pre><span class="comment"># Is there a relationship between Chest Pain Type and Heart Disease?</span>
sns.countplot(x=<span class="string">'ChestPainType'</span>, hue=<span class="string">'HeartDisease'</span>, data=data)
plt.show()</pre>
                </div>
                
                <div class="countplot-container">
                    <h5 style="text-align: center; color: #333; margin-bottom: 20px;">Chest Pain Type by Heart Disease Status</h5>
                    <div class="countplot">
                        <div class="count-group">
                            <div class="count-bar no-disease" style="height: 50px;"></div>
                            <div class="count-bar disease" style="height: 200px;"></div>
                            <div class="count-label">ASY</div>
                        </div>
                        <div class="count-group">
                            <div class="count-bar no-disease" style="height: 150px;"></div>
                            <div class="count-bar disease" style="height: 60px;"></div>
                            <div class="count-label">ATA</div>
                        </div>
                        <div class="count-group">
                            <div class="count-bar no-disease" style="height: 160px;"></div>
                            <div class="count-bar disease" style="height: 40px;"></div>
                            <div class="count-label">NAP</div>
                        </div>
                        <div class="count-group">
                            <div class="count-bar no-disease" style="height: 80px;"></div>
                            <div class="count-bar disease" style="height: 30px;"></div>
                            <div class="count-label">TA</div>
                        </div>
                        <div class="x-axis-label">Chest Pain Type</div>
                        <div class="y-axis-label">Count</div>
                    </div>
                    <div class="legend">
                        <div class="legend-item">
                            <div class="legend-box" style="background: #43e97b;"></div>
                            <span>No Disease (0)</span>
                        </div>
                        <div class="legend-item">
                            <div class="legend-box" style="background: #f5576c;"></div>
                            <span>Has Disease (1)</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Steps 7-10: Data Preprocessing & Model Training -->
        <div class="slide">
            <div class="code-header">
                <span class="hero-icon">🔧</span>
                <h3>Steps 7-10: Preprocessing & Training</h3>
            </div>
            
            <div class="content-card">
                <div class="code-display">
                    <pre><span class="comment"># Step 7: Data Preprocessing and Encoding</span>
data = pd.get_dummies(data, drop_first=<span class="number">True</span>)
data.head()

<span class="comment"># Step 8: Define Features and Target</span>
X = data.drop(<span class="string">'HeartDisease'</span>, axis=<span class="number">1</span>)
y = data[<span class="string">'HeartDisease'</span>]

<span class="comment"># Step 9: Train/Test Split</span>
<span class="function">from</span> sklearn.model_selection <span class="function">import</span> train_test_split

X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=<span class="number">0.3</span>, random_state=<span class="number">42</span>
)

<span class="comment"># Step 10: Train Logistic Regression Model</span>
<span class="function">from</span> sklearn.linear_model <span class="function">import</span> LogisticRegression

model = LogisticRegression(max_iter=<span class="number">10000</span>)
model.fit(X_train, y_train)</pre>
                </div>
            </div>
        </div>

        <!-- Step 11: Make Predictions -->
        <div class="slide">
            <div class="code-header">
                <span class="hero-icon">🎯</span>
                <h3>Step 11: Make Predictions</h3>
            </div>
            
            <div class="content-card">
                <div class="code-display">
                    <pre><span class="comment"># Make predictions on the test set</span>
y_pred = model.predict(X_test)
print(<span class="string">'------التوقع----'</span>)
print(y_pred[:<span class="number">15</span>])
print(<span class="string">'------الاختبار-----'</span>)
print(y_test[:<span class="number">15</span>].values)

<span class="comment"># Create results dataframe</span>
<span class="function">from</span> IPython.display <span class="function">import</span> display
data_result = data.loc[X_test.index].copy()
data_result[<span class="string">"Predicted"</span>] = y_pred
data_result[<span class="string">"Actual"</span>] = y_test.values
display(data_result.head(<span class="number">10</span>))

<span class="comment"># Count errors and correct predictions</span>
errors = (data_result[<span class="string">"Predicted"</span>] != data_result[<span class="string">"Actual"</span>]).sum()
print(<span class="string">"عدد الأخطاء:"</span>, errors)

correct = (data_result[<span class="string">"Predicted"</span>] == data_result[<span class="string">"Actual"</span>]).sum()
print(<span class="string">"عدد التوقعات الصحيحة:"</span>, correct)

accuracy = correct / len(data_result)
print(<span class="string">"الدقة:"</span>, round(accuracy * <span class="number">100</span>, <span class="number">2</span>), <span class="string">"%"</span>)</pre>
                </div>
            </div>
        </div>

        <!-- Steps 12-13: Evaluation & Confusion Matrix -->
        <div class="slide">
            <div class="code-header">
                <span class="hero-icon">📈</span>
                <h3>Steps 12-13: Model Evaluation</h3>
            </div>
            
            <div class="content-card">
                <div class="code-display">
                    <pre><span class="comment"># Step 12: Evaluate the Model</span>
<span class="function">from</span> sklearn.metrics <span class="function">import</span> confusion_matrix, accuracy_score, classification_report

cm = confusion_matrix(y_test, y_pred)
acc = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred)

print(<span class="string">'Confusion Matrix:'</span>)
print(cm)
print(<span class="string">'\nAccuracy:'</span>, acc)

<span class="comment"># Step 13: Confusion Matrix Heatmap</span>
sns.heatmap(cm, annot=<span class="number">True</span>, fmt=<span class="string">'d'</span>, cmap=<span class="string">'Reds'</span>)
plt.xlabel(<span class="string">'Predicted'</span>)
plt.ylabel(<span class="string">'Actual'</span>)
plt.title(<span class="string">'Confusion Matrix Heatmap'</span>)
plt.show()</pre>
                </div>
                
                <div class="heatmap-container">
                    <h5 style="text-align: center; color: #333; margin-bottom: 20px;">Confusion Matrix Heatmap</h5>
                    <div class="heatmap">
                        <div class="heatmap-cell header"></div>
                        <div class="heatmap-cell header">Predicted: 0</div>
                        <div class="heatmap-cell header">Predicted: 1</div>
                        <div class="heatmap-cell header">Actual: 0</div>
                        <div class="heatmap-cell value high">109</div>
                        <div class="heatmap-cell value low">14</div>
                        <div class="heatmap-cell header">Actual: 1</div>
                        <div class="heatmap-cell value medium">21</div>
                        <div class="heatmap-cell value high">132</div>
                    </div>
                    <p style="text-align: center; color: #333; margin-top: 20px;">Red = High values (good for diagonal)</p>
                </div>
            </div>
        </div>

        <!-- Extra: Decision Tree Comparison -->
        <div class="slide">
            <div class="code-header">
                <span class="hero-icon">🌳</span>
                <h3>Extra: Decision Tree Comparison</h3>
            </div>
            
            <div class="content-card">
                <div class="code-display">
                    <pre><span class="comment"># Extra: Decision Tree Classifier</span>
<span class="function">from</span> sklearn.tree <span class="function">import</span> DecisionTreeClassifier

<span class="comment"># Initialize and train the Decision Tree model</span>
dt_model = DecisionTreeClassifier(random_state=<span class="number">42</span>)
dt_model.fit(X_train, y_train)

<span class="comment"># Make predictions</span>
y_pred_dt = dt_model.predict(X_test)

<span class="comment"># Evaluate the model</span>
cm_dt = confusion_matrix(y_test, y_pred_dt)
acc_dt = accuracy_score(y_test, y_pred_dt)
report_dt = classification_report(y_test, y_pred_dt)

print(<span class="string">'Decision Tree Confusion Matrix:'</span>)
print(cm_dt)
print(<span class="string">'\nDecision Tree Accuracy:'</span>, acc_dt)

<span class="comment"># Visualize the Decision Tree confusion matrix</span>
sns.heatmap(cm_dt, annot=<span class="number">True</span>, fmt=<span class="string">'d'</span>, cmap=<span class="string">'Blues'</span>)
plt.xlabel(<span class="string">'Predicted'</span>)
plt.ylabel(<span class="string">'Actual'</span>)
plt.title(<span class="string">'Decision Tree Confusion Matrix Heatmap'</span>)
plt.show()</pre>
                </div>
                
                <div style="text-align: center; margin-top: 30px;">
                    <h4>Model Comparison</h4>
                    <p><strong>Logistic Regression:</strong> 87.32% accuracy ✅</p>
                    <p><strong>Decision Tree:</strong> 80.07% accuracy</p>
                    <h3 style="margin-top: 30px;">Thank You! 🙏</h3>
                    <p style="font-size: 1.4rem;">Any Questions?</p>
                </div>
            </div>
        </div>

    </div>

    <!-- Navigation -->
    <div class="navigation">
        <button class="nav-button" onclick="prevSlide()">◀</button>
        <div class="slide-indicator">
            <span id="current">1</span> / <span id="total">16</span>
        </div>
        <button class="nav-button" onclick="nextSlide()">▶</button>
    </div>

    <script>
        let currentSlide = 0;
        const slides = document.querySelectorAll('.slide');
        const totalSlides = slides.length;
        
        function updateProgress() {
            const progress = ((currentSlide + 1) / totalSlides) * 100;
            document.getElementById('progressBar').style.width = progress + '%';
        }
        
        function showSlide(index) {
            slides.forEach(slide => slide.classList.remove('active'));
            slides[index].classList.add('active');
            document.getElementById('current').textContent = index + 1;
            document.getElementById('total').textContent = totalSlides;
            updateProgress();
            
            // Add fade-in animation to elements
            const elements = slides[index].querySelectorAll('h1, h2, h3, p, .principle-card, .workflow-step, .stat-card, .histogram-container, .countplot-container, .heatmap-container');
            elements.forEach((el, i) => {
                el.style.opacity = '0';
                el.style.transform = 'translateY(20px)';
                setTimeout(() => {
                    el.style.transition = 'all 0.6s ease';
                    el.style.opacity = '1';
                    el.style.transform = 'translateY(0)';
                }, i * 100);
            });
        }
        
        function nextSlide() {
            if (currentSlide < totalSlides - 1) {
                currentSlide++;
                showSlide(currentSlide);
            }
        }
        
        function prevSlide() {
            if (currentSlide > 0) {
                currentSlide--;
                showSlide(currentSlide);
            }
        }
        
        // Keyboard navigation
        document.addEventListener('keydown', (e) => {
            const activeSlide = slides[currentSlide];
            const scrollableElements = activeSlide.querySelectorAll('.code-display, .slide');
            
            if (e.key === 'ArrowRight' || e.key === ' ' || e.key === 'g') {
                e.preventDefault();
                nextSlide();
            } else if (e.key === 'ArrowLeft' || e.key === 'i') {
                e.preventDefault();
                prevSlide();
            } else if (e.key === 'Home') {
                e.preventDefault();
                currentSlide = 0;
                showSlide(currentSlide);
            } else if (e.key === 'End') {
                e.preventDefault();
                currentSlide = totalSlides - 1;
                showSlide(currentSlide);
            } else if (e.key === 'ArrowDown' || e.key === 'j') {
                e.preventDefault();
                // Scroll code displays or slide
                scrollableElements.forEach(el => {
                    el.scrollTop += 50;
                });
            } else if (e.key === 'ArrowUp' || e.key === 'h') {
                e.preventDefault();
                // Scroll code displays or slide
                scrollableElements.forEach(el => {
                    el.scrollTop -= 50;
                });
            }
        });
        
        // Touch support for mobile
        let touchStartX = 0;
        let touchEndX = 0;
        
        document.addEventListener('touchstart', (e) => {
            touchStartX = e.changedTouches[0].screenX;
        });
        
        document.addEventListener('touchend', (e) => {
            touchEndX = e.changedTouches[0].screenX;
            handleSwipe();
        });
        
        function handleSwipe() {
            if (touchEndX < touchStartX - 50) {
                nextSlide();
            }
            if (touchEndX > touchStartX + 50) {
                prevSlide();
            }
        }
        
        // Click navigation
        document.querySelector('.presentation-container').addEventListener('click', (e) => {
            if (e.target.closest('.nav-button') || e.target.closest('.code-display')) return;
            
            const rect = e.currentTarget.getBoundingClientRect();
            const x = e.clientX - rect.left;
            const width = rect.width;
            
            if (x > width * 0.5) {
                nextSlide();
            } else {
                prevSlide();
            }
        });
        
        // Initialize
        showSlide(0);
    </script>
</body>
</html><!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Heart Disease Prediction with Logistic Regression</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --secondary-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            --tertiary-gradient: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            --success-gradient: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
            --bg-primary: #0a0e27;
            --bg-secondary: #151933;
            --text-primary: #ffffff;
            --text-secondary: #e0e7ff;
            --accent-primary: #818cf8;
            --accent-secondary: #a78bfa;
            --card-bg: rgba(139, 92, 246, 0.1);
            --border-color: rgba(139, 92, 246, 0.3);
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background: var(--bg-primary);
            color: var(--text-primary);
            overflow: hidden;
            cursor: default;
            -webkit-tap-highlight-color: transparent;
            user-select: none;
            width: 100vw;
            height: 100vh;
            position: relative;
        }

        /* Static gradient background */
        .bg-static {
            position: fixed;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            z-index: 0;
            opacity: 0.3;
            background: radial-gradient(circle at 20% 80%, #667eea 0%, transparent 50%),
                        radial-gradient(circle at 80% 20%, #764ba2 0%, transparent 50%),
                        radial-gradient(circle at 40% 40%, #f093fb 0%, transparent 50%);
        }

        .presentation-container {
            width: 100vw;
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            padding: 10px 20px 80px 20px;
            z-index: 1;
            overflow-y: auto;
        }

        .slide {
            display: none;
            text-align: center;
            width: 100%;
            max-width: 1400px;
            max-height: 95vh;
            overflow-y: auto;
            animation: slideIn 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
            padding: 20px 0;
        }

        /* Hide scrollbar but keep functionality */
        .slide::-webkit-scrollbar {
            width: 0px;
            background: transparent;
        }

        .slide {
            -ms-overflow-style: none;
            scrollbar-width: none;
        }

        .slide.active {
            display: block;
        }

        @keyframes slideIn {
            0% {
                opacity: 0;
                transform: translateX(50px) scale(0.95);
            }
            100% {
                opacity: 1;
                transform: translateX(0) scale(1);
            }
        }

        h1 {
            font-size: 3.5rem;
            margin-bottom: 20px;
            background: var(--primary-gradient);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            font-weight: 900;
            letter-spacing: -2px;
            line-height: 1.1;
            text-shadow: 0 0 80px rgba(139, 92, 246, 0.5);
        }

        h2 {
            font-size: 2.5rem;
            margin-bottom: 20px;
            background: linear-gradient(to right, #818cf8, #c084fc);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            font-weight: 800;
            letter-spacing: -1px;
        }

        h3 {
            font-size: 1.8rem;
            margin-bottom: 15px;
            color: var(--accent-secondary);
            font-weight: 700;
        }

        p {
            font-size: 1.3rem;
            line-height: 1.8;
            margin-bottom: 15px;
            color: var(--text-secondary);
            font-weight: 300;
        }

        .hero-icon {
            font-size: 4rem;
            margin-bottom: 20px;
            display: inline-block;
            animation: float 3s ease-in-out infinite;
            filter: drop-shadow(0 10px 20px rgba(139, 92, 246, 0.4));
        }

        @keyframes float {
            0%, 100% { transform: translateY(0) rotate(0deg); }
            50% { transform: translateY(-20px) rotate(5deg); }
        }

        .content-card {
            background: linear-gradient(135deg, var(--card-bg), rgba(99, 102, 241, 0.05));
            backdrop-filter: blur(20px);
            padding: 40px;
            border-radius: 24px;
            margin: 20px auto;
            border: 1px solid var(--border-color);
            box-shadow: 0 20px 60px rgba(139, 92, 246, 0.15),
                        inset 0 1px 0 rgba(255, 255, 255, 0.1);
            max-width: 1100px;
            position: relative;
            overflow: hidden;
        }

        .principle-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
            gap: 25px;
            margin: 30px 0;
            position: relative;
            z-index: 1;
        }

        .principle-card {
            background: linear-gradient(135deg, rgba(99, 102, 241, 0.15), rgba(139, 92, 246, 0.05));
            padding: 30px;
            border-radius: 20px;
            border: 1px solid rgba(139, 92, 246, 0.2);
            transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            cursor: pointer;
            position: relative;
            overflow: hidden;
        }

        .principle-card:hover {
            transform: translateY(-8px) scale(1.02);
            box-shadow: 0 20px 40px rgba(139, 92, 246, 0.3);
            border-color: var(--accent-primary);
        }

        .showcase-icon {
            font-size: 2.5rem;
            margin-bottom: 15px;
            display: inline-block;
        }

        .code-example {
            background: #1a1f36;
            padding: 20px;
            border-radius: 16px;
            margin: 15px 0;
            text-align: left;
            font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Fira Code', monospace;
            font-size: 0.95rem;
            line-height: 1.6;
            border: 1px solid rgba(139, 92, 246, 0.2);
            position: relative;
            overflow-x: auto;
        }

        .code-display {
            background: #1a1f36;
            padding: 30px;
            border-radius: 16px;
            margin: 20px auto;
            text-align: left;
            font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Fira Code', monospace;
            font-size: 0.9rem;
            line-height: 1.8;
            border: 1px solid rgba(139, 92, 246, 0.2);
            max-height: 400px;
            overflow-y: auto;
            max-width: 1000px;
            position: relative;
            user-select: text;
        }

        /* Hide scrollbar for code display */
        .code-display::-webkit-scrollbar {
            width: 0px;
            background: transparent;
        }

        .code-display {
            -ms-overflow-style: none;
            scrollbar-width: none;
        }

        .code-display pre {
            margin: 0;
            color: #e0e7ff;
            white-space: pre-wrap;
        }

        .code-display .comment {
            color: #6272a4;
        }

        .code-display .function {
            color: #50fa7b;
        }

        .code-display .string {
            color: #f1fa8c;
        }

        .code-display .number {
            color: #bd93f9;
        }

        .code-header {
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 20px;
            gap: 15px;
        }

        .code-header h3 {
            margin: 0;
            font-size: 1.6rem;
        }

        .code-header .hero-icon {
            font-size: 2rem;
            margin: 0;
        }

        .workflow-step {
            background: rgba(139, 92, 246, 0.1);
            padding: 25px;
            border-radius: 16px;
            border: 1px solid rgba(139, 92, 246, 0.3);
            text-align: left;
            margin: 15px 0;
        }

        .workflow-number {
            display: inline-block;
            width: 40px;
            height: 40px;
            background: var(--primary-gradient);
            color: white;
            border-radius: 50%;
            line-height: 40px;
            font-weight: bold;
            margin-bottom: 15px;
            text-align: center;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.05);
            padding: 25px;
            border-radius: 16px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            transition: all 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(139, 92, 246, 0.2);
        }

        .stat-number {
            font-size: 3rem;
            font-weight: 900;
            background: var(--primary-gradient);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .key-takeaway {
            background: linear-gradient(135deg, rgba(16, 185, 129, 0.1), rgba(5, 150, 105, 0.05));
            padding: 25px;
            border-radius: 16px;
            margin: 20px 0;
            border: 2px solid rgba(16, 185, 129, 0.3);
            text-align: left;
        }

        .challenge-solution {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin: 30px 0;
        }

        .challenge-card {
            background: linear-gradient(135deg, rgba(231, 76, 60, 0.1), transparent);
            padding: 30px;
            border-radius: 20px;
            border: 2px solid rgba(231, 76, 60, 0.3);
        }

        .solution-card {
            background: linear-gradient(135deg, rgba(46, 204, 113, 0.1), transparent);
            padding: 30px;
            border-radius: 20px;
            border: 2px solid rgba(46, 204, 113, 0.3);
        }

        .confusion-matrix {
            display: inline-block;
            background: rgba(255, 255, 255, 0.05);
            padding: 30px;
            border-radius: 20px;
            margin: 20px auto;
        }

        .matrix-row {
            display: flex;
            justify-content: center;
            margin: 5px 0;
        }

        .matrix-cell {
            width: 100px;
            height: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 2px;
            border-radius: 8px;
            font-weight: bold;
            font-size: 1.2rem;
        }

        .matrix-cell.header {
            background: rgba(139, 92, 246, 0.2);
            font-size: 1rem;
        }

        .matrix-cell.correct {
            background: rgba(67, 233, 123, 0.3);
            font-size: 1.8rem;
        }

        .matrix-cell.wrong {
            background: rgba(243, 93, 108, 0.3);
            font-size: 1.4rem;
        }

        /* Proper visualization styles */
        .histogram-container {
            background: #f8f9fa;
            padding: 30px;
            border-radius: 16px;
            margin: 20px auto;
            max-width: 800px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        .histogram {
            position: relative;
            height: 300px;
            display: flex;
            align-items: flex-end;
            justify-content: space-around;
            border-left: 2px solid #333;
            border-bottom: 2px solid #333;
            padding: 20px;
        }

        .hist-bar {
            background: #667eea;
            border-radius: 4px 4px 0 0;
            position: relative;
            transition: all 0.3s ease;
            min-width: 80px;
            margin: 0 10px;
        }

        .hist-bar:hover {
            background: #764ba2;
            transform: translateY(-5px);
        }

        .hist-bar-label {
            position: absolute;
            bottom: -25px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 0.9rem;
            color: #333;
        }

        .hist-bar-value {
            position: absolute;
            top: -25px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 0.9rem;
            font-weight: bold;
            color: #333;
        }

        .axis-label {
            position: absolute;
            color: #333;
            font-weight: 600;
        }

        .x-axis-label {
            bottom: -50px;
            left: 50%;
            transform: translateX(-50%);
        }

        .y-axis-label {
            left: -80px;
            top: 50%;
            transform: rotate(-90deg);
        }

        .countplot-container {
            background: #f8f9fa;
            padding: 30px;
            border-radius: 16px;
            margin: 20px auto;
            max-width: 900px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        .countplot {
            position: relative;
            height: 350px;
            display: flex;
            align-items: flex-end;
            justify-content: space-around;
            border-left: 2px solid #333;
            border-bottom: 2px solid #333;
            padding: 20px;
        }

        .count-group {
            display: flex;
            gap: 10px;
            align-items: flex-end;
        }

        .count-bar {
            width: 40px;
            border-radius: 4px 4px 0 0;
            position: relative;
            transition: all 0.3s ease;
        }

        .count-bar.no-disease {
            background: #43e97b;
        }

        .count-bar.disease {
            background: #f5576c;
        }

        .count-bar:hover {
            transform: translateY(-5px);
            filter: brightness(1.1);
        }

        .count-label {
            position: absolute;
            bottom: -30px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 0.9rem;
            color: #333;
            white-space: nowrap;
        }

        .legend {
            display: flex;
            justify-content: center;
            gap: 30px;
            margin-top: 20px;
        }

        .legend-item {
            display: flex;
            align-items: center;
            gap: 8px;
            color: #333;
        }

        .legend-box {
            width: 20px;
            height: 20px;
            border-radius: 4px;
        }

        .heatmap-container {
            background: #f8f9fa;
            padding: 30px;
            border-radius: 16px;
            margin: 20px auto;
            max-width: 700px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        .heatmap {
            display: grid;
            grid-template-columns: 80px repeat(2, 150px);
            grid-template-rows: 80px repeat(2, 100px);
            gap: 2px;
            background: #333;
            padding: 2px;
        }

        .heatmap-cell {
            background: #fff;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 1.2rem;
            position: relative;
        }

        .heatmap-cell.header {
            background: #e0e0e0;
            font-size: 0.9rem;
            color: #333;
        }

        .heatmap-cell.value {
            color: #fff;
        }

        .heatmap-cell.high {
            background: #d32f2f;
        }

        .heatmap-cell.medium {
            background: #f57c00;
        }

        .heatmap-cell.low {
            background: #ffb74d;
        }

        .navigation {
            position: fixed;
            bottom: 30px;
            left: 50%;
            transform: translateX(-50%);
            display: flex;
            gap: 20px;
            align-items: center;
            background: rgba(21, 25, 51, 0.95);
            padding: 12px 25px;
            border-radius: 40px;
            border: 1px solid rgba(139, 92, 246, 0.3);
            backdrop-filter: blur(10px);
            z-index: 1000;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        }

        .nav-button {
            background: none;
            border: none;
            color: var(--accent-primary);
            font-size: 1.5rem;
            cursor: pointer;
            transition: all 0.3s ease;
            padding: 10px;
            border-radius: 50%;
        }

        .nav-button:hover {
            background: rgba(139, 92, 246, 0.2);
            transform: scale(1.1);
        }

        .slide-indicator {
            font-size: 1rem;
            color: var(--text-secondary);
            font-weight: 600;
            min-width: 100px;
            text-align: center;
        }

        .progress-bar {
            position: fixed;
            top: 0;
            left: 0;
            height: 4px;
            background: var(--primary-gradient);
            transition: width 0.5s cubic-bezier(0.65, 0, 0.35, 1);
            z-index: 1001;
            box-shadow: 0 0 10px rgba(139, 92, 246, 0.5);
        }

        .gradient-text {
            background: linear-gradient(90deg, #667eea 0%, #764ba2 25%, #f093fb 50%, #f5576c 75%, #4facfe 100%);
            background-size: 200% auto;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            animation: gradientMove 3s linear infinite;
        }

        @keyframes gradientMove {
            to { background-position: 200% center; }
        }

        /* Mobile responsive */
        @media (max-width: 768px) {
            h1 { font-size: 2.2rem; }
            h2 { font-size: 1.8rem; }
            h3 { font-size: 1.4rem; }
            p { font-size: 1.1rem; }
            
            .hero-icon { font-size: 3rem; }
            
            .principle-grid {
                grid-template-columns: 1fr;
            }
            
            .challenge-solution {
                grid-template-columns: 1fr;
            }
            
            .content-card {
                padding: 20px;
                margin: 10px auto;
            }
            
            .code-display {
                font-size: 0.8rem;
                padding: 20px;
            }
        }
    </style>
</head>
<body>
    <div class="bg-static"></div>
    <div class="progress-bar" id="progressBar"></div>
    
    <div class="presentation-container">
        
        <!-- Slide 1: Introduction -->
        <div class="slide active">
            <div class="hero-icon">❤️</div>
            <h1>Heart</h1>
            <div class="content-card">
                <h3 class="gradient-text">Transform Medical Data into Life-Saving Predictions</h3>
                <p>From patient records to instant risk assessment using machine learning</p>
                <div style="margin-top: 30px; display: flex; justify-content: center; gap: 40px; align-items: center;">
                    <span style="font-size: 2rem;">💊</span>
                    <span style="font-size: 2rem;">🤖</span>
                    <span style="font-size: 2rem;">💚</span>
                </div>
            </div>
        </div>

        <!-- Slide 2: Problem Statement -->
        <div class="slide">
            <h2>Problem Statement</h2>
            <div class="content-card">
                <h3>Why We Need This Project</h3>
                <div style="text-align: left; margin-top: 30px;">
                    <p style="font-size: 1.4rem; margin-bottom: 25px;">
                        <strong>Heart disease kills more people than any other disease</strong>
                    </p>
                    
                    <div class="principle-grid">
                        <div class="principle-card">
                            <div class="showcase-icon">🌍</div>
                            <h4>Big Problem</h4>
                            <p>17.9 million people die every year from heart problems</p>
                        </div>
                        <div class="principle-card">
                            <div class="showcase-icon">⏰</div>
                            <h4>Finding It Late</h4>
                            <p>Most people find out too late when they already have serious problems</p>
                        </div>
                        <div class="principle-card">
                            <div class="showcase-icon">💰</div>
                            <h4>Very Expensive</h4>
                            <p>Heart tests cost a lot of money and take many days</p>
                        </div>
                    </div>
                    
                    <div class="key-takeaway" style="margin-top: 30px;">
                        <h4 style="color: #10b981; margin-bottom: 15px;">Our Solution</h4>
                        <p style="font-size: 1.3rem;">We made a computer program that can predict heart disease using simple medical information</p>
                        <p style="font-size: 1.2rem; margin-top: 10px;">✅ Fast (few seconds)</p>
                        <p style="font-size: 1.2rem;">✅ Cheap (just need basic tests)</p>
                        <p style="font-size: 1.2rem;">✅ Easy to use</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 3: Dataset Overview -->
        <div class="slide">
            <h2>Dataset Overview</h2>
            <div class="content-card">
                <h3>What Data We Used</h3>
                <p style="margin-bottom: 30px;">We got medical records from <strong>918 patients</strong></p>
                
                <div class="principle-grid">
                    <div class="principle-card">
                        <div class="showcase-icon">🧑‍🤝‍🧑</div>
                        <h4>Basic Information</h4>
                        <p><strong>Age:</strong> How old they are</p>
                        <p><strong>Sex:</strong> Male or Female</p>
                    </div>
                    <div class="principle-card">
                        <div class="showcase-icon">💓</div>
                        <h4>Heart Information</h4>
                        <p><strong>Blood Pressure:</strong> How hard blood pushes</p>
                        <p><strong>Heart Rate:</strong> How fast heart beats</p>
                        <p><strong>Chest Pain:</strong> What type of pain</p>
                    </div>
                    <div class="principle-card">
                        <div class="showcase-icon">🔬</div>
                        <h4>Test Results</h4>
                        <p><strong>Cholesterol:</strong> Fat in blood</p>
                        <p><strong>Blood Sugar:</strong> Sugar level</p>
                        <p><strong>ECG:</strong> Heart electricity test</p>
                    </div>
                </div>
                
                <div style="margin-top: 40px;">
                    <h4>Our Target: Do They Have Heart Disease?</h4>
                    <div style="display: flex; justify-content: center; gap: 40px; margin-top: 20px;">
                        <div class="stat-card">
                            <div class="stat-number" style="color: #43e97b;">410</div>
                            <p>Healthy People (45%)</p>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number" style="color: #f5576c;">508</div>
                            <p>Sick People (55%)</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 4: Model Used -->
        <div class="slide">
            <h2>Model Used</h2>
            <div class="content-card">
                <h3>Logistic Regression</h3>
                <p style="font-size: 1.4rem; margin-bottom: 30px;">A simple but powerful way to predict Yes or No</p>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 40px; margin: 30px 0;">
                    <div style="text-align: left;">
                        <h4 style="color: #818cf8; margin-bottom: 20px;">How It Works</h4>
                        <div class="workflow-step">
                            <div class="workflow-number">1</div>
                            <p>Takes patient information (age, blood pressure, etc.)</p>
                        </div>
                        <div class="workflow-step">
                            <div class="workflow-number">2</div>
                            <p>Calculates a number between 0 and 1</p>
                        </div>
                        <div class="workflow-step">
                            <div class="workflow-number">3</div>
                            <p>If number > 0.5 → Has disease<br>If number < 0.5 → No disease</p>
                        </div>
                    </div>
                    
                    <div style="text-align: left;">
                        <h4 style="color: #a78bfa; margin-bottom: 20px;">Why We Chose It</h4>
                        <ul style="list-style: none; padding: 0;">
                            <li style="padding: 12px 0; font-size: 1.2rem;">✅ Perfect for Yes/No questions</li>
                            <li style="padding: 12px 0; font-size: 1.2rem;">✅ Easy to understand results</li>
                            <li style="padding: 12px 0; font-size: 1.2rem;">✅ Works well with medical data</li>
                            <li style="padding: 12px 0; font-size: 1.2rem;">✅ Doctors can trust it</li>
                            <li style="padding: 12px 0; font-size: 1.2rem;">✅ Fast to train and use</li>
                        </ul>
                    </div>
                </div>
                
                <div class="code-example">
                    <p style="color: #818cf8; margin-bottom: 10px;">Simple Example:</p>
                    <p style="color: #e0e7ff;">Patient: 55 years old, high blood pressure, chest pain</p>
                    <p style="color: #e0e7ff;">Model calculates: 0.78 (probability)</p>
                    <p style="color: #f5576c;">Result: High risk (78%) → This patient likely has heart disease!</p>
                </div>
            </div>
        </div>

        <!-- Slide 5: Accuracy / Evaluation Results -->
        <div class="slide">
            <h2>Accuracy & Results</h2>
            <div class="content-card">
                <h3>How Good Is Our Model?</h3>
                
                <div style="margin: 40px 0;">
                    <div class="stat-number" style="font-size: 5rem; color: #43e97b;">87.3%</div>
                    <p style="font-size: 1.5rem;">Overall Accuracy</p>
                </div>
                
                <div style="margin: 40px 0;">
                    <h4>What This Means</h4>
                    <p style="font-size: 1.3rem; margin-bottom: 30px;">When we test on new patients:</p>
                    
                    <div class="confusion-matrix">
                        <div class="matrix-row">
                            <div class="matrix-cell header">Real →</div>
                            <div class="matrix-cell header">Healthy</div>
                            <div class="matrix-cell header">Sick</div>
                        </div>
                        <div class="matrix-row">
                            <div class="matrix-cell header">We Said<br>Healthy</div>
                            <div class="matrix-cell correct">109✓</div>
                            <div class="matrix-cell wrong">21✗</div>
                        </div>
                        <div class="matrix-row">
                            <div class="matrix-cell header">We Said<br>Sick</div>
                            <div class="matrix-cell wrong">14✗</div>
                            <div class="matrix-cell correct">132✓</div>
                        </div>
                    </div>
                </div>
                
                <div class="principle-grid" style="margin-top: 40px;">
                    <div class="principle-card">
                        <h4>✅ Good News</h4>
                        <p>For every 100 sick people, we find 86 of them correctly</p>
                    </div>
                    <div class="principle-card">
                        <h4>⚠️ Be Careful</h4>
                        <p>For every 100 predictions, about 13 are wrong</p>
                    </div>
                    <div class="principle-card">
                        <h4>🎯 Very Useful</h4>
                        <p>Much better than guessing (50%) - saves many lives!</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Slide 6: Challenges & Solutions & Future Work -->
        <div class="slide">
            <h2>Challenges, Solutions & Future</h2>
            <div class="content-card">
                <div class="challenge-solution">
                    <div class="challenge-card">
                        <h3 style="color: #f5576c;">🚧 Problems We Faced</h3>
                        <div style="margin-top: 20px; text-align: left;">
                            <h4>1. Missing Data</h4>
                            <p>Some patients had no cholesterol values</p>
                            
                            <h4 style="margin-top: 20px;">2. Different Data Types</h4>
                            <p>Mix of numbers and words (like "Male/Female")</p>
                            
                            <h4 style="margin-top: 20px;">3. Unbalanced Data</h4>
                            <p>More sick people than healthy in our data</p>
                        </div>
                    </div>
                    
                    <div class="solution-card">
                        <h3 style="color: #43e97b;">✅ How We Fixed It</h3>
                        <div style="margin-top: 20px; text-align: left;">
                            <h4>1. Filled Missing Values</h4>
                            <p>Used average values from similar patients</p>
                            
                            <h4 style="margin-top: 20px;">2. Converted Words to Numbers</h4>
                            <p>Male = 1, Female = 0 (computer needs numbers)</p>
                            
                            <h4 style="margin-top: 20px;">3. Tried Different Models</h4>
                            <p>Also tested Decision Tree - got 80% accuracy</p>
                        </div>
                    </div>
                </div>
                
                <div class="key-takeaway" style="margin-top: 30px;">
                    <h3 style="color: #818cf8;">🚀 Future Ideas</h3>
                    <div class="principle-grid" style="margin-top: 20px;">
                        <div class="workflow-step">
                            <h4>📱 Mobile App</h4>
                            <p>People can check their risk at home</p>
                        </div>
                        <div class="workflow-step">
                            <h4>🧠 Better Models</h4>
                            <p>Try Neural Networks for 90%+ accuracy</p>
                        </div>
                        <div class="workflow-step">
                            <h4>🏥 Hospital Use</h4>
                            <p>Connect to real hospital systems</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Code Demo Slides Start Here -->
        <!-- Steps 1-4: Import, Load, Preview, Basic Info -->
        <div class="slide">
            <div class="code-header">
                <span class="hero-icon">💻</span>
                <h3>Our Code Implementation</h3>
            </div>
            
            <div class="content-card">
                <h4>Steps 1-4: Setup and Data Loading</h4>
                
                <div class="code-display">
                    <pre><span class="comment"># Step 1: Import Libraries</span>
<span class="function">import</span> pandas as pd
<span class="function">import</span> numpy as np
<span class="function">import</span> matplotlib.pyplot as plt
<span class="function">import</span> seaborn as sns

<span class="comment"># Step 2: Load the Dataset</span>
<span class="function">import</span> kagglehub
<span class="function">from</span> kagglehub <span class="function">import</span> KaggleDatasetAdapter

file_path = <span class="string">"heart.csv"</span>
data = kagglehub.load_dataset(
    KaggleDatasetAdapter.PANDAS,
    <span class="string">"fedesoriano/heart-failure-prediction"</span>,
    file_path
)

<span class="comment"># Step 3: Preview the Data</span>
data.head()

<span class="comment"># Step 4: Basic Information</span>
data.info()
data.describe()</pre>
                </div>
            </div>
        </div>

        <!-- Step 5: Check Missing Values -->
        <div class="slide">
            <div class="code-header">
                <span class="hero-icon">🔍</span>
                <h3>Step 5: Check for Missing Values</h3>
            </div>
            
            <div class="content-card">
                <div class="code-display">
                    <pre><span class="comment"># Step 5: Check for Missing Values</span>
data.isnull().sum()</pre>
                </div>
                
                <div style="background: rgba(46, 204, 113, 0.1); padding: 20px; border-radius: 16px; margin-top: 20px;">
                    <p><strong>Result: No missing values found!</strong></p>
                    <p>All 918 patients have complete data</p>
                </div>
            </div>
        </div>

        <!-- Step 6: EDA - HeartDisease Distribution -->
        <div class="slide">
            <div class="code-header">
                <span class="hero-icon">📊</span>
                <h3>Step 6: Data Exploration - Heart Disease</h3>
            </div>
            
            <div class="content-card">
                <div class="code-display">
                    <pre><span class="comment"># What does the distribution of HeartDisease (0 vs 1) look like?</span>
plt.hist(data[<span class="string">'HeartDisease'</span>])
plt.show()</pre>
                </div>
                
                <div class="histogram-container">
                    <h5 style="text-align: center; color: #333; margin-bottom: 20px;">Heart Disease Distribution</h5>
                    <div class="histogram">
                        <div class="hist-bar" style="height: 180px;">
                            <div class="hist-bar-value">410</div>
                            <div class="hist-bar-label">0 (No)</div>
                        </div>
                        <div class="hist-bar" style="height: 220px;">
                            <div class="hist-bar-value">508</div>
                            <div class="hist-bar-label">1 (Yes)</div>
                        </div>
                        <div class="x-axis-label">Heart Disease</div>
                        <div class="y-axis-label">Count</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Step 6: Age & Cholesterol Histograms -->
        <div class="slide">
            <div class="code-header">
                <span class="hero-icon">📊</span>
                <h3>Step 6: Age and Cholesterol Distributions</h3>
            </div>
            
            <div class="content-card">
                <div class="code-display">
                    <pre><span class="comment"># How does Age vary between people with and without Heart Disease?</span>
plt.hist(data[<span class="string">'Age'</span>])
plt.show()

<span class="comment"># What is the distribution of cholesterol values in the dataset?</span>
plt.hist(data[<span class="string">'Cholesterol'</span>])
plt.show()</pre>
                </div>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px;">
                    <div class="histogram-container" style="padding: 20px;">
                        <h5 style="text-align: center; color: #333; margin-bottom: 10px;">Age Distribution</h5>
                        <div class="histogram" style="height: 200px;">
                            <div style="position: absolute; bottom: 20px; left: 20px; right: 20px; height: 150px; background: linear-gradient(to top, #667eea, #764ba2); border-radius: 8px; opacity: 0.8;">
                                <div style="text-align: center; color: white; padding-top: 60px;">
                                    <p>Range: 28-77 years</p>
                                    <p>Average: 53.5 years</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="histogram-container" style="padding: 20px;">
                        <h5 style="text-align: center; color: #333; margin-bottom: 10px;">Cholesterol Distribution</h5>
                        <div class="histogram" style="height: 200px;">
                            <div style="position: absolute; bottom: 20px; left: 20px; right: 20px; height: 150px; background: linear-gradient(to top, #667eea, #764ba2); border-radius: 8px; opacity: 0.8;">
                                <div style="text-align: center; color: white; padding-top: 60px;">
                                    <p>Range: 0-603 mg/dl</p>
                                    <p>Average: 198.8 mg/dl</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Step 6: Chest Pain Type Analysis -->
        <div class="slide">
            <div class="code-header">
                <span class="hero-icon">📊</span>
                <h3>Step 6: Chest Pain Type vs Heart Disease</h3>
            </div>
            
            <div class="content-card">
                <div class="code-display">
                    <pre><span class="comment"># Is there a relationship between Chest Pain Type and Heart Disease?</span>
sns.countplot(x=<span class="string">'ChestPainType'</span>, hue=<span class="string">'HeartDisease'</span>, data=data)
plt.show()</pre>
                </div>
                
                <div class="countplot-container">
                    <h5 style="text-align: center; color: #333; margin-bottom: 20px;">Chest Pain Type by Heart Disease Status</h5>
                    <div class="countplot">
                        <div class="count-group">
                            <div class="count-bar no-disease" style="height: 50px;"></div>
                            <div class="count-bar disease" style="height: 200px;"></div>
                            <div class="count-label">ASY</div>
                        </div>
                        <div class="count-group">
                            <div class="count-bar no-disease" style="height: 150px;"></div>
                            <div class="count-bar disease" style="height: 60px;"></div>
                            <div class="count-label">ATA</div>
                        </div>
                        <div class="count-group">
                            <div class="count-bar no-disease" style="height: 160px;"></div>
                            <div class="count-bar disease" style="height: 40px;"></div>
                            <div class="count-label">NAP</div>
                        </div>
                        <div class="count-group">
                            <div class="count-bar no-disease" style="height: 80px;"></div>
                            <div class="count-bar disease" style="height: 30px;"></div>
                            <div class="count-label">TA</div>
                        </div>
                        <div class="x-axis-label">Chest Pain Type</div>
                        <div class="y-axis-label">Count</div>
                    </div>
                    <div class="legend">
                        <div class="legend-item">
                            <div class="legend-box" style="background: #43e97b;"></div>
                            <span>No Disease (0)</span>
                        </div>
                        <div class="legend-item">
                            <div class="legend-box" style="background: #f5576c;"></div>
                            <span>Has Disease (1)</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Steps 7-10: Data Preprocessing & Model Training -->
        <div class="slide">
            <div class="code-header">
                <span class="hero-icon">🔧</span>
                <h3>Steps 7-10: Preprocessing & Training</h3>
            </div>
            
            <div class="content-card">
                <div class="code-display">
                    <pre><span class="comment"># Step 7: Data Preprocessing and Encoding</span>
data = pd.get_dummies(data, drop_first=<span class="number">True</span>)
data.head()

<span class="comment"># Step 8: Define Features and Target</span>
X = data.drop(<span class="string">'HeartDisease'</span>, axis=<span class="number">1</span>)
y = data[<span class="string">'HeartDisease'</span>]

<span class="comment"># Step 9: Train/Test Split</span>
<span class="function">from</span> sklearn.model_selection <span class="function">import</span> train_test_split

X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=<span class="number">0.3</span>, random_state=<span class="number">42</span>
)

<span class="comment"># Step 10: Train Logistic Regression Model</span>
<span class="function">from</span> sklearn.linear_model <span class="function">import</span> LogisticRegression

model = LogisticRegression(max_iter=<span class="number">10000</span>)
model.fit(X_train, y_train)</pre>
                </div>
            </div>
        </div>

        <!-- Step 11: Make Predictions -->
        <div class="slide">
            <div class="code-header">
                <span class="hero-icon">🎯</span>
                <h3>Step 11: Make Predictions</h3>
            </div>
            
            <div class="content-card">
                <div class="code-display">
                    <pre><span class="comment"># Make predictions on the test set</span>
y_pred = model.predict(X_test)
print(<span class="string">'------التوقع----'</span>)
print(y_pred[:<span class="number">15</span>])
print(<span class="string">'------الاختبار-----'</span>)
print(y_test[:<span class="number">15</span>].values)

<span class="comment"># Create results dataframe</span>
<span class="function">from</span> IPython.display <span class="function">import</span> display
data_result = data.loc[X_test.index].copy()
data_result[<span class="string">"Predicted"</span>] = y_pred
data_result[<span class="string">"Actual"</span>] = y_test.values
display(data_result.head(<span class="number">10</span>))

<span class="comment"># Count errors and correct predictions</span>
errors = (data_result[<span class="string">"Predicted"</span>] != data_result[<span class="string">"Actual"</span>]).sum()
print(<span class="string">"عدد الأخطاء:"</span>, errors)

correct = (data_result[<span class="string">"Predicted"</span>] == data_result[<span class="string">"Actual"</span>]).sum()
print(<span class="string">"عدد التوقعات الصحيحة:"</span>, correct)

accuracy = correct / len(data_result)
print(<span class="string">"الدقة:"</span>, round(accuracy * <span class="number">100</span>, <span class="number">2</span>), <span class="string">"%"</span>)</pre>
                </div>
            </div>
        </div>

        <!-- Steps 12-13: Evaluation & Confusion Matrix -->
        <div class="slide">
            <div class="code-header">
                <span class="hero-icon">📈</span>
                <h3>Steps 12-13: Model Evaluation</h3>
            </div>
            
            <div class="content-card">
                <div class="code-display">
                    <pre><span class="comment"># Step 12: Evaluate the Model</span>
<span class="function">from</span> sklearn.metrics <span class="function">import</span> confusion_matrix, accuracy_score, classification_report

cm = confusion_matrix(y_test, y_pred)
acc = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred)

print(<span class="string">'Confusion Matrix:'</span>)
print(cm)
print(<span class="string">'\nAccuracy:'</span>, acc)

<span class="comment"># Step 13: Confusion Matrix Heatmap</span>
sns.heatmap(cm, annot=<span class="number">True</span>, fmt=<span class="string">'d'</span>, cmap=<span class="string">'Reds'</span>)
plt.xlabel(<span class="string">'Predicted'</span>)
plt.ylabel(<span class="string">'Actual'</span>)
plt.title(<span class="string">'Confusion Matrix Heatmap'</span>)
plt.show()</pre>
                </div>
                
                <div class="heatmap-container">
                    <h5 style="text-align: center; color: #333; margin-bottom: 20px;">Confusion Matrix Heatmap</h5>
                    <div class="heatmap">
                        <div class="heatmap-cell header"></div>
                        <div class="heatmap-cell header">Predicted: 0</div>
                        <div class="heatmap-cell header">Predicted: 1</div>
                        <div class="heatmap-cell header">Actual: 0</div>
                        <div class="heatmap-cell value high">109</div>
                        <div class="heatmap-cell value low">14</div>
                        <div class="heatmap-cell header">Actual: 1</div>
                        <div class="heatmap-cell value medium">21</div>
                        <div class="heatmap-cell value high">132</div>
                    </div>
                    <p style="text-align: center; color: #333; margin-top: 20px;">Red = High values (good for diagonal)</p>
                </div>
            </div>
        </div>

        <!-- Extra: Decision Tree Comparison -->
        <div class="slide">
            <div class="code-header">
                <span class="hero-icon">🌳</span>
                <h3>Extra: Decision Tree Comparison</h3>
            </div>
            
            <div class="content-card">
                <div class="code-display">
                    <pre><span class="comment"># Extra: Decision Tree Classifier</span>
<span class="function">from</span> sklearn.tree <span class="function">import</span> DecisionTreeClassifier

<span class="comment"># Initialize and train the Decision Tree model</span>
dt_model = DecisionTreeClassifier(random_state=<span class="number">42</span>)
dt_model.fit(X_train, y_train)

<span class="comment"># Make predictions</span>
y_pred_dt = dt_model.predict(X_test)

<span class="comment"># Evaluate the model</span>
cm_dt = confusion_matrix(y_test, y_pred_dt)
acc_dt = accuracy_score(y_test, y_pred_dt)
report_dt = classification_report(y_test, y_pred_dt)

print(<span class="string">'Decision Tree Confusion Matrix:'</span>)
print(cm_dt)
print(<span class="string">'\nDecision Tree Accuracy:'</span>, acc_dt)

<span class="comment"># Visualize the Decision Tree confusion matrix</span>
sns.heatmap(cm_dt, annot=<span class="number">True</span>, fmt=<span class="string">'d'</span>, cmap=<span class="string">'Blues'</span>)
plt.xlabel(<span class="string">'Predicted'</span>)
plt.ylabel(<span class="string">'Actual'</span>)
plt.title(<span class="string">'Decision Tree Confusion Matrix Heatmap'</span>)
plt.show()</pre>
                </div>
                
                <div style="text-align: center; margin-top: 30px;">
                    <h4>Model Comparison</h4>
                    <p><strong>Logistic Regression:</strong> 87.32% accuracy ✅</p>
                    <p><strong>Decision Tree:</strong> 80.07% accuracy</p>
                    <h3 style="margin-top: 30px;">Thank You! 🙏</h3>
                    <p style="font-size: 1.4rem;">Any Questions?</p>
                </div>
            </div>
        </div>

    </div>

    <!-- Navigation -->
    <div class="navigation">
        <button class="nav-button" onclick="prevSlide()">◀</button>
        <div class="slide-indicator">
            <span id="current">1</span> / <span id="total">16</span>
        </div>
        <button class="nav-button" onclick="nextSlide()">▶</button>
    </div>

    <script>
        let currentSlide = 0;
        const slides = document.querySelectorAll('.slide');
        const totalSlides = slides.length;
        
        function updateProgress() {
            const progress = ((currentSlide + 1) / totalSlides) * 100;
            document.getElementById('progressBar').style.width = progress + '%';
        }
        
        function showSlide(index) {
            slides.forEach(slide => slide.classList.remove('active'));
            slides[index].classList.add('active');
            document.getElementById('current').textContent = index + 1;
            document.getElementById('total').textContent = totalSlides;
            updateProgress();
            
            // Add fade-in animation to elements
            const elements = slides[index].querySelectorAll('h1, h2, h3, p, .principle-card, .workflow-step, .stat-card, .histogram-container, .countplot-container, .heatmap-container');
            elements.forEach((el, i) => {
                el.style.opacity = '0';
                el.style.transform = 'translateY(20px)';
                setTimeout(() => {
                    el.style.transition = 'all 0.6s ease';
                    el.style.opacity = '1';
                    el.style.transform = 'translateY(0)';
                }, i * 100);
            });
        }
        
        function nextSlide() {
            if (currentSlide < totalSlides - 1) {
                currentSlide++;
                showSlide(currentSlide);
            }
        }
        
        function prevSlide() {
            if (currentSlide > 0) {
                currentSlide--;
                showSlide(currentSlide);
            }
        }
        
        // Keyboard navigation
        document.addEventListener('keydown', (e) => {
            const activeSlide = slides[currentSlide];
            const scrollableElements = activeSlide.querySelectorAll('.code-display, .slide');
            
            if (e.key === 'ArrowRight' || e.key === ' ' || e.key === 'g') {
                e.preventDefault();
                nextSlide();
            } else if (e.key === 'ArrowLeft' || e.key === 'i') {
                e.preventDefault();
                prevSlide();
            } else if (e.key === 'Home') {
                e.preventDefault();
                currentSlide = 0;
                showSlide(currentSlide);
            } else if (e.key === 'End') {
                e.preventDefault();
                currentSlide = totalSlides - 1;
                showSlide(currentSlide);
            } else if (e.key === 'ArrowDown' || e.key === 'j') {
                e.preventDefault();
                // Scroll code displays or slide
                scrollableElements.forEach(el => {
                    el.scrollTop += 50;
                });
            } else if (e.key === 'ArrowUp' || e.key === 'h') {
                e.preventDefault();
                // Scroll code displays or slide
                scrollableElements.forEach(el => {
                    el.scrollTop -= 50;
                });
            }
        });
        
        // Touch support for mobile
        let touchStartX = 0;
        let touchEndX = 0;
        
        document.addEventListener('touchstart', (e) => {
            touchStartX = e.changedTouches[0].screenX;
        });
        
        document.addEventListener('touchend', (e) => {
            touchEndX = e.changedTouches[0].screenX;
            handleSwipe();
        });
        
        function handleSwipe() {
            if (touchEndX < touchStartX - 50) {
                nextSlide();
            }
            if (touchEndX > touchStartX + 50) {
                prevSlide();
            }
        }
        
        // Click navigation
        document.querySelector('.presentation-container').addEventListener('click', (e) => {
            if (e.target.closest('.nav-button') || e.target.closest('.code-display')) return;
            
            const rect = e.currentTarget.getBoundingClientRect();
            const x = e.clientX - rect.left;
            const width = rect.width;
            
            if (x > width * 0.5) {
                nextSlide();
            } else {
                prevSlide();
            }
        });
        
        // Initialize
        showSlide(0);
    </script>
</body>
</html>
